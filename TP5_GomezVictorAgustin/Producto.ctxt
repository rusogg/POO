#BlueJ class context
comment0.target=Producto
comment0.text=\r\n\ Permite\ instanciar\ un\ producto\r\n\ \r\n\ @author\ Gomez\ Victor\ Agustin\r\n\ @version\ 1.0\r\n
comment1.params=p_codigo\ p_rubro\ p_descripcion\ p_costo\ p_porcPtoRepo\ p_existMinima\ p_laboratorio
comment1.target=Producto(int,\ java.lang.String,\ java.lang.String,\ double,\ double,\ int,\ Laboratorio)
comment10.params=
comment10.target=double\ getCosto()
comment11.params=p_stock
comment11.target=void\ setStock(int)
comment12.params=
comment12.target=int\ getStock()
comment13.params=p_porcPtoRepo
comment13.target=void\ setPorcPtoRepo(double)
comment14.params=
comment14.target=double\ getPorcPtoRepo()
comment15.params=p_existMinima
comment15.target=void\ setExistMinima(int)
comment16.params=
comment16.target=int\ getExistMinima()
comment17.params=p_laboratorio
comment17.target=void\ setLaboratorio(Laboratorio)
comment18.params=
comment18.target=Laboratorio\ getLaboratorio()
comment19.params=
comment19.target=void\ mostrar()
comment2.params=p_codigo\ p_rubro\ p_descripcion\ p_costo\ p_laboratorio
comment2.target=Producto(int,\ java.lang.String,\ java.lang.String,\ double,\ Laboratorio)
comment20.params=p_cantidad
comment20.target=void\ ajuste(int)
comment20.text=Si\ el\ stock\ nuevo\ es\ positivo,\ se\ agrega\ al\ stock,\ si\ es\ negativo\ se\ resta\r\n\ \ \ \ \ @param\ int\ p_cantidad\r\n\ \ \ \ \ @return\ No\ devuelve\ nada\r\n@throws\ No\ dispara\ ninguna\ excepci\u00F3n\ *
comment21.params=
comment21.target=double\ stockValorizado()
comment21.text=Guardamos\ en\ una\ variable\ temporal\ el\ valor\ del\ stock\ y\ le\ sumamos\ el\ 12%\ para\ luego\ devolver\ el\ total\r\n\ \ \ \ \ @param\ No\ recibe\ parametros\r\n\ \ \ \ \ @return\ Devuelve\ una\ variable\ de\ tipo\ double\r\n@throws\ No\ dispara\ ninguna\ excepci\u00F3n\ *
comment22.params=
comment22.target=double\ precioLista()
comment22.text=Suma\ un\ 12%\ al\ precio\ costo\ para\ devolver\ el\ precio\ de\ lista\r\n\ \ \ \ \ @param\ No\ recibe\ parametros\r\n\ \ \ \ \ @return\ Devuelve\ una\ variable\ de\ tipo\ double\r\n@throws\ No\ dispara\ ninguna\ excepci\u00F3n\ *
comment23.params=
comment23.target=double\ precioContado()
comment23.text=Resta\ un\ 5%\ al\ precio\ de\ lista\ para\ devolver\ precio\ de\ contado\r\n\ \ \ \ \ @param\ No\ recibe\ parametros\r\n\ \ \ \ \ @return\ Devuelve\ una\ variable\ de\ tipo\ double\r\n@throws\ No\ dispara\ ninguna\ excepci\u00F3n\ *
comment24.params=
comment24.target=java.lang.String\ mostrarLinea()
comment25.params=p_porce
comment25.target=void\ ajustarPtoRepo(double)
comment25.text=Cambia\ el\ valor\ Porcentaje\ de\ reposicion\r\n\ \ \ \ \ @param\ double\ p_porce\r\n\ \ \ \ \ @return\ No\ devuelve\ nada\r\n@throws\ No\ dispara\ ninguna\ excepci\u00F3n\ *
comment26.params=p_cantidad
comment26.target=void\ ajustarExistMin(int)
comment26.text=Cambia\ el\ valor\ de\ existencia\ minima\ de\ un\ producto\r\n\ \ \ \ \ @param\ double\ p_cantidad\r\n\ \ \ \ \ @return\ No\ devuelve\ nada\r\n@throws\ No\ dispara\ ninguna\ excepci\u00F3n\ *
comment3.params=p_codigo
comment3.target=void\ setCodigo(int)
comment4.params=
comment4.target=int\ getCodigo()
comment5.params=p_rubro
comment5.target=void\ setRubro(java.lang.String)
comment6.params=
comment6.target=java.lang.String\ getRubro()
comment7.params=p_descripcion
comment7.target=void\ setDescripcion(java.lang.String)
comment8.params=
comment8.target=java.lang.String\ getDescripcion()
comment9.params=p_costo
comment9.target=void\ setCosto(double)
numComments=27
